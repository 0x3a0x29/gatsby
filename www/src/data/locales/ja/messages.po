msgid ""
msgstr ""
"POT-Creation-Date: 2020-02-20 15:22-0800\n"
"Mime-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: @lingui/cli\n"
"Language: ja\n"
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Plural-Forms: \n"

#: src/components/dark-mode-toggle.js:136
msgid "Activate light mode"
msgstr ""

#: src/components/dark-mode-toggle.js:136
msgid "Activate dark mode"
msgstr ""

#: src/components/docs-table-of-contents.js:93
msgid "Table of Contents"
msgstr "目次"

#: src/components/guide-list.js:47
msgid "In this section:"
msgstr ""

#: src/components/homepage/homepage-features.js:21
msgid "<0><1>Modern web tech without the headache</1><2>Enjoy the power of the latest web technologies – <3>React.js</3>, <4>Webpack</4>, modern JavaScript and CSS and more — all set up and waiting for you to start building.</2></0><5><6>Bring your own data</6><7>Gatsby’s rich data plugin ecosystem lets you build sites with the data you want — from one or many sources: Pull data from headless CMSs, SaaS services, APIs, databases, your file system, and more directly into your pages using<8>GraphQL</8>.</7></5><9><10>Scale to the entire internet</10><11>Gatsby.js is Internet Scale. Forget complicated deploys with databases and servers and their expensive, time-consuming setup costs, maintenance, and scaling fears. Gatsby.js builds your site as “static” files which can be deployed easily on dozens of services.</11></9><12><13>Future-proof your website</13><14>Do not build a website with last decade’s tech. The future of the web is mobile, JavaScript and APIs—the  <15>JAMstack</15>. Every website is a web app and every web app is a website. Gatsby.js is the universal JavaScript framework you’ve been waiting for.</14></12><16><17>Progressive Web Apps</17><18>Gatsby.js is a PWA (Progressive Web App) generator. You get code and data splitting out-of-the-box. Gatsby loads only the critical HTML, CSS, data, and JavaScript so your site loads as fast as possible. Once loaded, Gatsby prefetches resources for other pages so clicking around the site feels incredibly fast.</18></16><19><20>Speed past the competition</20><21>Gatsby.js builds the fastest possible website. Instead of waiting to generate pages when requested, pre-build pages and lift them into a global cloud of servers — ready to be delivered instantly to your users wherever they are.</21></19>"
msgstr ""

#: src/components/layer-model/layer-content-sections.js:188
msgid "<0><1>Content</1> is often organized in systems like databases, content management systems, files, or external APIs.</0><2>Any source of data can be connected to Gatsby through plugins or using Gatsby's APIs.</2>"
msgstr ""

#: src/components/layer-model/layer-content-sections.js:218
msgid "<0><1>Building</1> compiles your application with modern features like server-side rendering, route based code splitting (<2>and more!</2>) for great performance out of the box.</0><3>During the build (when you run <4>gatsby build</4> or<5>gatsby develop</5>), data is fetched and combined into a GraphQL schema with a static snapshot of all data your site needs.</3>"
msgstr ""

#: src/components/layer-model/layer-content-sections.js:251
msgid "<0><1>Data</1> returned by GraphQL comes back in the exact same shape that you asked for it, without having to travel across the network because it was already gathered at <2>build time</2>.</0><3>Since all data is combined in the data layer, it's even possible to query multiple sources at the same time.</3>"
msgstr ""

#: src/components/layer-model/layer-content-sections.js:281
msgid "<0>React powers components in Gatsby sites that are <1> rehydrated</1>, whatever you can do in React you can do with Gatsby.</0><2>Your components can pull in whatever data they need from any source in the data layer.</2>"
msgstr ""

#: src/components/layer-model/layer-content-sections.js:315
msgid "Home"
msgstr ""

#: src/components/layer-model/layer-content-sections.js:324
msgid "Gatsby tips"
msgstr ""

#: src/components/layer-model/layer-content-sections.js:329
msgid "<0>The optimized <1>app</1> runs in the browser with all the speed of Gatsby as well as the convenience and great developer experience of working with tools like React and GraphQL.</0>"
msgstr ""

#: src/components/markdown-page-footer.js:24
msgid "<0/> Edit this page on GitHub"
msgstr ""

#: src/components/navigation-mobile.js:45
#: src/components/navigation.js:86
msgid "Docs"
msgstr ""

#: src/components/navigation-mobile.js:46
msgid "Tutorials"
msgstr ""

#: src/components/navigation-mobile.js:47
#: src/components/navigation.js:88
msgid "Plugins"
msgstr ""

#: src/components/navigation-mobile.js:48
#: src/components/navigation.js:90
msgid "Blog"
msgstr ""

#: src/components/navigation-mobile.js:49
#: src/components/navigation.js:91
msgid "Showcase"
msgstr ""

#: src/components/navigation.js:87
msgid "Tutorial"
msgstr ""

#: src/components/navigation.js:89
msgid "Features"
msgstr ""

#: src/components/navigation.js:92
msgid "Contributing"
msgstr ""

#: src/components/navigation.js:164
msgid "Gatsby, Back to homepage"
msgstr ""

#: src/components/navigation.js:174
msgid "Gatsby Logo"
msgstr ""

#: src/components/navigation.js:180
msgid "Primary Navigation"
msgstr ""

#: src/components/prev-and-next.js:37
msgid "pagination"
msgstr ""

#: src/components/prev-and-next.js:51
msgid "Previous"
msgstr "前"

#: src/components/prev-and-next.js:84
msgid "Next"
msgstr "次"

#: src/components/search-form/search-form.js:149
#: src/components/search-form/search-form.js:150
msgid "Search gatsbyjs.org"
msgstr ""

#: src/components/search-form/search-form.js:151
msgid "Hit 's' to search docs"
msgstr ""

#: src/components/shared/egghead-embed.js:39
msgid "Video hosted on <0>egghead.io</0>"
msgstr ""

#: src/components/shared/footer-links.js:7
msgid "Accessibility Statement"
msgstr "アクセシビリティ方針"

#: src/components/shared/footer-links.js:8
msgid "Code of Conduct"
msgstr "行動規範"

#: src/components/shared/footer-links.js:9
msgid "Logo & Assets"
msgstr ""

#: src/components/sidebar/button-expand-all.js:42
msgid "Collapse All"
msgstr ""

#: src/components/sidebar/button-expand-all.js:51
msgid "Expand All"
msgstr ""

#: src/components/sidebar/section-title.js:142
msgid "{0} collapse"
msgstr ""

#: src/components/sidebar/section-title.js:142
msgid "{0} expand"
msgstr ""

#: src/components/sidebar/sidebar.js:203
msgid "Secondary Navigation"
msgstr ""

#: src/components/sidebar/sticky-responsive-sidebar.js:106
msgid "Show Secondary Navigation"
msgstr ""

#: src/components/skip-nav-link.js:31
msgid "Skip to main content"
msgstr ""

#: src/pages/features.js:19
msgid "<0>Features Overview</0><1>There are many ways to build a website. If you’re considering Gatsby, you may also be looking at some alternatives:</1><2><3><4>JAMstack frameworks</4> such as<5>Jekyll</5>, <6>Next.js</6>, and<7>Nuxt.js</7>let you put text or markdown in a specific directory such as<8>pages/</8> in a version-controlled codebase. They then build a specific kind of site, usually a blog, as HTML files from the content you’ve added. These files can be cached and served from a CDN.<9/><10>Coming from the JAMstack world?</10><11>Compare Gatsby vs JAMstack</11></3><12><13>Traditional content management systems</13> (CMSs) like<14>WordPress</14>and<15>Drupal</15>give you an online text editor to create content. You customize the look and feel by choosing themes and plugins or by writing custom PHP or JavaScript code. Content is saved in a database, which is retrieved and sent to users when they visit the website. Depending on your requirements you can self-host your website or use an official hosting provider.<16/><17>Coming from the CMS world?</17><18>Compare Gatsby vs CMS</18></12></2><19>The chart below details Gatsby’s capabilities in comparison with a representative from each category. Click on any row to see a more detailed explanation on that feature and our rating for each system.</19><20>Legend</20>"
msgstr ""

#: src/pages/features/cms.js:22
msgid "<0>CMS</0><1>Compare popular CMS options on this page.</1>"
msgstr ""

#: src/pages/features/cms.js:48
msgid "<0>Comparison</0><1>To see a filtered view of Gatsby compared with specific CMS technologies, choose the technologies to compare and then press Compare:</1>"
msgstr ""

#: src/pages/features/jamstack.js:22
msgid "<0>JAMstack</0><1>Compare popular JAMstack technologies on this page.</1>"
msgstr ""

#: src/pages/features/jamstack.js:51
msgid "<0>Comparison</0><1>To see a filtered view of Gatsby with specific JAMstack technologies, choose the technologies to compare and then press Compare:</1>"
msgstr ""

#: src/pages/guidelines/color.js:64
msgid "<0><1>Color</1><2>Vibrant, friendly, and accessible color is an important part of Gatsby’s design. It distinguishes our brand and helps us to create consistent experiences and meaningful expressions across marketing and products.</2><3>Work in Progress <4/></3></0><5><6><7><8>Our color palette includes primary and secondary colors that can be used for interfaces as well as illustrations.<9/><10>Click the color names for detailed information.</10></8></7><11><12><13><14/><15>Aliased color</15></13><16><17>WCAG Contrast Score</17><18><19><20>3</20> AAA</19><21><22>2+</22> AA Large</21><23><24>2</24> AA</23></18></16></12></11></6><25/></5><26><27>Accessibility</27><28><29><30>We are committed to complying with <31>Web Content Accessibility Guidelines 2.0</31>Level AA standard contrast ratios. To do this, we need to choose primary, secondary and neutral colors that support usability. This ensures sufficient color contrast between elements so that users with low vision can see and use our products.</30></29><32><33>Color Contrast</33><34>The WCAG provides an equation that determines these two values. It outputs a number between 0 and 21, with 21 being the highest amount of contrast—think black text and a white background—and 0 being no contrast—white on white. That ratio is where the scores are derived from. There are technically 5 scores:</34><35><36><37>× — Fail</37> – <38>< 3.0</38><39/>The text doesn't have enough contrast with the background.</36><40><41>2+ — AA Large</41> – <42>>= 3.0</42><43/>The smallest acceptable amount of contrast for type sizes of 14pt bold/18pt (which roughly translates to ~18.5px bold/24px @1x) and larger.</40><44><45>2 — AA</45> – <46>>= 4.5</46><47/>The required contrast score for text sizes below 14pt bold/18pt.</44><48><49>3 — AAA</49> – <50>>= 7.0</50><51/>Use it for longer form text that will be read for a significant period of time and requires enhanced contrast.</48><52><53>AAA Large</53><54/>AAA Large means that your <55>large</55> text has a contrast ratio of<56>4.5</56> or higher—which is the same score as AA, and which is why you won't see AAA Large as a visible score in our documentation.</52></35><57>Color Blindness</57><58>There are different types of <59>color blindness</59>— the most common form is red-green color blindness, followed by blue-yellow color blindness and total color blindness. Red-green color blindness affects up to 6% of males and 0.4% of females.</58><60>When using color, ensure that adjacent color shades are distinguishable for color blind people. Use a color blindness analyzer to confirm your choices. Here are a couple of free apps and browser extensions to help:</60><61><62><63>Sim Daltonism</63>(iOS, Mac OS X)</62><64><65>Color Oracle</65>(Mac OS X, Windows, Linux)</64><66>A11Y - Color blindness empathy test (<67>Chrome</67>, <68>Firefox</68>)</66></61></32></28></26><69><70/></69>"
msgstr ""

#: src/pages/guidelines/design-tokens.js:74
msgid "<0><1><2>Design Tokens</2><3>This page collects all design tokens currently available for gatsbyjs.org which are not covered on sibling pages.</3><4>Work in Progress <5/></4></1></0><6><7><8><9>Our design tokens can be imported from <10>src/utils/presets</10>. We are following the <11>System UI Theme Specification</11>. This page is not a complete list of all available tokens yet. Please bear with us as we sort out documentation for what is currently missing.</9></8></7></6><12><13>Space</13><14><15><16>Spacing tokens are intended for use with <17>margin</17>, <18>padding</18>, and other layout-related CSS properties.</16><19>The primary use should be building individual components; however, as we flesh out this part of our design tokens, they are also expected to be used to define global (layout) spacing properties.</19></15><20><21><22><23><24>Token</24><25>rem</25><26>px</26><27>Example</27></23></22><28>{0}</28></21></20></14></12><29><30>Shadows & Elevation</30><31><32><33>Component elevation in our UI is depicted using shadows. These tokens are intended to be used with the <34>box-shadow</34> CSS property.</33><35>There is a lot of definition work to do here, which is why we deliberately chose to omit adding more documentation at this point.</35></32><36>{1}</36></31></29><37><38>Z-Indices</38><39><40><41>Intended to be used with the <42>box-shadow</42> CSS property, these tokens along \"Shadows & Elevation\" define the order of components along the z-axis.</41></40><43><44><45><46><47><48>Token</48><49>Value</49></47></46><50>{2}</50></45></44></43></39></37><51><52>Radii</52><53><54><55>Intended for use with the <56>border-radius</56> CSS property. Currently defined in <57>px</57>, which means they do not yet scale when adjusting the root font size.</55></54><58><59><60><61><62>Token</62><63>px</63><64>Example</64></61></60><65>{3}</65></59></58></53></51><66><67>Fonts</67><68><69><70>Intended for use with the <71>font-family</71> CSS property.</70></69><72><73><74><75><76>Token</76><77>Value</77><78>Example</78></75></74><79>{4}</79></73></72></68></66><80><81>Font Sizes</81><82><83><84>Intended for use with the <85>font-size</85> CSS property.</84></83><86><87><88><89><90>Token</90><91>Value</91><92>Example</92></89></88><93>{5}</93></87></86></82></80><94><95>Font Weights</95><96><97><98>Intended for use with the <99>font-weight</99> CSS property.</98></97><100><101><102><103><104><105>Token</105><106>Value</106><107>Example</107></104></103><108>{6}</108></102></101></100></96></94><109><110>Letter Spacing</110><111><112><113>Intended for use with the <114>letter-spacing</114> CSS property.</113></112><115><116><117><118><119><120>Token</120><121>Value</121><122>Example</122></119></118><123>{7}</123></117></116></115></111></109><124><125>Line Heights</125><126><127><128>Intended for use with the <129>line-height</129> CSS property.</128></127><130><131><132><133><134>Token</134><135>Value</135><136>Example</136></133></132><137>{8}</137></131></130></126></124><138><139>Breakpoints & Media Queries</139><140><141><142>For convenience, a <143>mediaQueries</143> scale derived from the<144>breakpoints</144> scale is available.</142></141><145><146><147><148><149><150>Token</150><151>Value</151></149></148><152>{9}</152></147><153><154><155><156>Token</156><157>Value</157></155></154><158>{10}</158></153></146></145></140></138><159><160>Colors</160><161><162><163>Please also see the <164>Colors</164>section for detailed information and accessibility notes.</163></162><165><166><167><168><169><170>Token</170><171>Hex</171><172>Example</172></169></168><173>{11}</173></167></166></165></161></159><174><175>Transition</175><176><177><178>Intended to be used with the <179>transition</179> CSS property.</178></177><180><181><182><183><184><185>Token</185><186>Value</186></184></183><187>{12}</187></182></181></180></176></174>"
msgstr ""

#: src/pages/guidelines/logo.js:173
msgid "<0><1>Logo</1><2>The Gatsby logo is the central visual cue to identify Gatsby and its official resources, publications, community projects, products, and integrations. Everywhere the Gatsby logo shows up, it should act and behave the same.</2></0><3><4><5><6>Because Gatsby <7>is and always will be free</7> open source software, but also is backed by Gatsby the company, this guide is relevant not only for internal use, but also for our community members and commercial partners.</6><8>Whether you want to reference Gatsby in your publication or service, show some love or link back to us, we hope this page contains everything you need.</8><9>Please <10>open an issue</10>on GitHub or <11>send a mail</11> to the Gatsby Inkteam if you have any questions, suggestions, or problems!<12>Happy shipping!</12></9></5><13><14/><15>Gatsby’s logo was created by Sacha Greif in late 2016, and is a true open source community effort. <16>💜</16><17>🙏</17>Check out <18>the footnotes</18> to retrace the most important iteration steps.</15><19>Download all logo assets <20/></19><21>Contains EPS, PNG, and SVG files<22/>v1.0, May 28, 2019</21><23>In a hurry? Here’s just the SVGs:</23><24>Logo SVG <25/></24><26>Monogram SVG <27/></26></13></4></3><28><29><30><31>Do these awesome things</31><32><33>Use the Gatsby logo or monogram to link to gatsbyjs.org or gatsbyjs.com</33><34>Use the Gatsby logo or monogram to advertise that your product has built-in Gatsby integration</34><35>Use the Gatsby logo or monogram in a blog post or news article about Gatsby</35><36>Use the Gatsby monogram when linking to your Gatsby community profile</36></32></30><37><38>Please don’t do these things</38><39><40>Use the Gatsby logo or monogram for your application’s icon</40><41>Create a modified version of the Gatsby logo or monogram, change the colors, dimensions or add your own text/images — please see the <42>Guidance</42> section below for examples</41><43>Integrate the Gatsby logo or monogram into your logo</43><44>Sell any Gatsby artwork without permission</44></39></37></29></28><45><46>Primary Logo</46><47><48><49>The primary Gatsby logo is a combination mark that consists of the Gatsby monogram/lettermark, and a wordmark. It is the preferred way to reference Gatsby, allowing newcomers to associate our brand name with the monogram. We encourage you to use it whenever possible.</49></48><50><51/></50></47></45><52><53>Monogram</53><54><55><56>We use the monogram as social media profile image for our official Twitter and GitHub accounts, and as “favicon” for our official website.</56><57>Furthermore the monogram may be used in cases where the association with Gatsby is evident, especially when space is an issue, e.g. like we currently do on store.gatsbyjs.org for mobile devices.</57></55><58><59><60/><61/><62/><63/></59></58></54></52><64><65>Partnership Lockups</65><66><67><68>When combining our logotype with another brand, product, or technology, we prefer the monogram over the logotype. It should be the same visual weight as the partner's logo, and connected by a \"plus\" sign.</68></67><69><70/><71/></69></66></64><72><73>Wordmark</73><74><75><76>The typeface used to set the logo wordmark is Futura PT Demi. The wordmark is optically kerned, and its uppercase “G” is customized to partly mirror the strict geometry of the monogram.</76><77>Futura PT Demi</77><78>ABCDEFGHIJKLMNOPQRSTUVWXYZ<79/>abcdefghijklmnopqrstuvwxyz<80/>1234567890!@€$%&*()-=+</78></75><81><82/><83/><84>Manual kerning and custom “G”</84>vs. <85>Futura PT Demi</85></81></74></72><86><87>Colors</87><88><89><90>The Gatsby logo colors are rebeccapurple (<91>Purple 60</91>), black, and white. The logo works best on a white background.</90></89><92><93/><94><95/><96/><97/></94></92></88><98><99><100>There are two additional, one-color versions of the Gatsby logo: An entirely black or white logo for those instances where the logo must display or print in a single color.</100><101>For dark backgrounds, the logo should always be white.</101><102>There are no absolutes regarding the selection of the specific color application, but context, contrast with regard to background color, and surrounding imagery and production parameters all should be considered.</102></99><103><104/></103></98><105><106><107>Additionally, we allow the single color version of the Gatsby logo to adapt to light colored backgrounds as long as a healthy contrast is preserved. Our example uses base neutral (<108>Grey 60</108>) on <109>Grey 20</109>.</107></106><110><111/></110></105></86><112><113>Clearspace</113><114><115><116>To ensure the legibility of the logo, it must be surrounded with a minimum amount of clearspace. This isolates the logo from competing elements such as photography, text or background patterns that may detract attention and lessen the overall impact.</116><117><118>Magenta</118>indicates clearspace, defined by the logo wordmark x-height or by 1/4 height of the Gatsby monogram. <119>Blue</119>marks type and element alignment and construction.</117></115><120><121/><122><123>Clearspace</123>around the logo is equal to the wordmark x-height.</122><124/><125><126>Clearspace</126>around the monogram equals 1/4 of its height.</125></120></114><127>Scale</127><128><129><130>Our logo is designed to scale to small sizes on print and screen.</130><131>Smallest size: 24 pixels high for screens, 0.3 inch/0.762 centimeter high for print.</131></129><132><133><134/><135><136/></135></133><137>Logo at 24px height</137></132></128></112><138><139>Guidance</139><140><141><142>Please help us maintain the integrity of the Gatsby logo and promote the consistency of the brand by not misusing it. Be responsible, not reckless. <143>🙏</143></142><144>If you find your needs are not covered by the logo and its recommended usage, please <145>get in touch</145>.</144></141><146><147>{0}</147></146></140></138><148><149>Footnotes</149><150><151><152>Originally created by Sacha Greif in late 2016, the Gatsby logo is a true open source community effort. We compiled some of the steps that lead to the current version of the logo:</152></151><153><154>{1}</154></153></150></148>"
msgstr ""

#: src/pages/guidelines/typography.js:91
msgid "<0><1><2>Typography</2><3>Typography provides the core structure of a well-designed interface. Gatsby’s typography strives to create clear hierarchies, useful organizations, and purposeful alignments that guide the user through content, product, and experience.</3><4>Work in Progress <5/></4></1></0><6><7>Font stack</7><8><9><10>Gatsby uses the all-time classic Futura for headlines and display copy. Long form text such as articles and documentation currently use the native font stack, but we are actively looking for a serif to increase the reading experience.</10></9><11><12><13>Futura PT</13></12></11></8><14><15><16>The native font stack</16><17>The “native font stack” depends on the user’s operating system and device; depending on that, we use San Francisco UI, Roboto or Segoe UI.</17><18>Our monospace font stack also makes use of the default fonts available: That’s usually San Francisco Mono, Menlo or Monaco on Mac OS X, Consolas on Windows, or Liberation Sans on Linux distributions.</18><19>In our (Figma, Sketch, etc.) designs we use Roboto as it’s easily available.</19></15><20><21><22>Sans-serif</22><23>Monospace</23></21></20></14></6><24><25>Scale</25><26><27><28>Since our primary use for the design system is interface design, our typographic scale is hand-crafted. This way we don’t have to worry about decimals in our design tools or when calculating line heights, don’t have to worry about subpixel rounding errors, and have total control over which sizes exist instead of outsourcing that job to a mathematical formula.</28><29>For long form content like articles, using a modular scale is totally fine though. Typography.js makes setting up and using such a scale easy.</29></27><30>{0}</30></26></24><31><32>Weights, letter spacings and line heights</32><33><34><35><36>A note on Futura PT Bold:</36> While Futura PT Bold works well at display size, it gets hard to read below ~30px. For screens, use it for the page title (once per page). Do not use it for \"bold\" text—that is the job of Futura PT Demi.</35></34><37><38>Font Weights</38><39><40><41>{1}</41><42><43>fontWeights.extraBold</43><44>Use this for the main headline, set in Futura PT Bold, only.</44></42></40><45><46>{2}</46><47><48>fontWeights.bold</48> — <49>bold</49><50>Use this for the all headlines but the main page title, and to emphasize text throughout regular copy.</50></47></45><51><52>{3}</52><53>fontWeights.body</53> — <54>normal</54></51></39><55>Letter Spacing</55><56>Letterspacing (also known as character spacing or tracking) is the adjustment of the horizontal white space between the letters in a block of text. Tokens are intended for use with the <57>letter-spacing</57> CSS property.</56><58><59><60>Normal</60> — <61>letterSpacings.normal</61> —<62>{4}</62></59><63>Use for almost everything.</63></58><64/><65><66><67>Tight</67> — <68>letterSpacings.tight</68> —<69>{5}</69></66><70>Use for headlines set in Futura PT.</70><71>Create digital experiences on the edge—faster</71></65><72/><73><74><75>Tracked</75> — <76>letterSpacings.tracked</76> —<77>{6}</77></74><78>Use for small caps, particularly at small sizes — when using capital letters together, the default spacing looks too tight.</78><79>greglobinski</79></73><80>Line Heights</80><81><82><83>Default</83> — <84>lineHeights.default</84> —<85>{7}</85></82><86>It eluded us then, but that’s no matter—tomorrow we will run faster, stretch out our arms farther. . . . And then one fine morning— So we beat on, boats against the current, borne back ceaselessly into the past.</86></81><87/><88><89><90>Solid</90> — <91>lineHeights.solid</91> — <92>{8}</92></89><93>Scale to the entire internet</93></88><94/><95><96><97>Dense</97> — <98>lineHeights.dense</98> — <99>{9}</99></96><100>Stop managing content.<101/>Start telling your story.</100></95><102/><103><104><105>Loose</105> — <106>lineHeights.loose</106> — <107>{10}</107></104><108>As a popular and growing framework for building websites and web applications, Gatsby is in a position to make an impact for accessibility and people with disabilities. The Gatsby team is passionate about helping you create websites that work for everyone, with helpful defaults that bake in web accessibility as well as performance optimizations.</108></103></37></33></31><109><110>Sample hierarchies</110><111><112><113>A couple of usage examples — currently, these are rough PoC-style<114>styled-system</114> remodels of components used on our website. Ideally, this section will be built using these \"live\" components.</113></112><115><116><117>The Future is Fast</117><118>Create digital experiences on the edge—faster</118><119>Gatsby provides a modern framework for turning content into feature-rich, visually engaging apps and websites.</119><120><121>Over the last few years, the modern JavaScript ecosystem has created tools that allow developers to build quicker with fewer bugs. Gatsby gives you easy access to features like modern JavaScript syntax, code bundling and hot reloading, without having to maintain custom tooling. Build app-like experiences faster — with Gatsby.</121><122>Websites come in a thousand different flavors. Timeframes, budgets, interactivity requirements and content systems can vary wildly from one project to the next.</122><123>This variety puts website teams between a rock and a hard place. They often have to maintain frontends built in multiple development systems, stretching their developers’ skill sets. Implementing the same dropdown in five different frameworks can be a huge headache. But what’s the alternative — turn down good client projects?</123><124>To add to the difficulty, when your UI development framework is coupled to your client’s CMS backend, it doesn’t just cause technical problems; it causes people problems. It makes your team’s staffing plans dependent on specific projects. It hamstrings your ability to respond to changing client requirements by shifting resources around.</124></120><125>Read more</125></116></115></111></109><126><127>Simple landing page</127><128><129>Stop managing content.<130/> Start telling your story.</129><131>Gatsby brings your content to the edge for lightning fast, safe website delivery with no CMS overhead.</131><132>Start a free trial</132><133>14 day free trial — no credit card required</133><134><135>Enjoy the power of the latest web technologies – React.js , Webpack , modern JavaScript and CSS and more — all set up and waiting for you to start building.</135><136>Gatsby’s rich data plugin ecosystem lets you build sites with the data you want — pull data from headless CMSs, SaaS services, APIs, databases, your file system, and more.</136></134><137><138>Do not build a website with last decade’s tech. The future of the web is mobile, JavaScript and APIs—the JAMstack. Every website is a web app and every web app is a website. Gatsby.js is the universal JavaScript framework you’ve been waiting for.</138><139>Forget complicated deploys with databases and servers and their expensive, time-consuming setup costs, maintenance, and scaling fears — Gatsby builds your site as “static” files which can be deployed easily on various services.</139></137><140><141>Gatsby.js builds the fastest possible website. Instead of waiting to generate pages when requested, pre-build pages and lift them into a global cloud of servers — ready to be delivered instantly to your users wherever they are.</141><142>Gatsby.js is a static PWA (Progressive Web App) generator. You get code and data splitting out-of-the-box. Gatsby loads only the critical HTML, CSS, data, and JavaScript so your site loads as fast as possible. Once loaded, Gatsby prefetches resources for other pages so clicking around the site feels incredibly fast.</142></140></128></126><143><144><145>Cards</145><146><147/><148/></146></144></143><149><150>Long-form text (with sidebar on large screens)</150><151><152><153><154>Documentation</154><155>{11}</155><156>Guides</156><157>{12}</157></153></152><158><159>How we're migrating a government open data site to Gatsby</159><160><161/><162>React Hooks are <163>cool</163>. Besides simplifying your code and removing the need for a lot of boilerplate associated with classes in JavaScript (looking at you, <164>this</164>), they enable some serious shareability. They also make it possible to use state in functional components.</162><165>You can probably tell that we’ve been super excited about <166>React Hooks</166>. So when they finally landed in React 16.8, we figured it was time to give our very own <167>StaticQuery</167>component the hook treatment!</165><168>Baking PWAs, React and GraphQL into a web framework</168><169>One of Gatsby’s goals is to provider users all the benefits of modern web out of the box, from implementing a Progressive Web App (PWA) checklist of features, React, accessibility by default, CSS-in-JS support, headless CMSs, and GraphQL.</169><170><171>No more Render Props necessary to use a Static Query</171></170><172>This simplifies accessing data in your components and also keeps your component tree shallow.</172><173>Let’s quickly check out a basic example. Here’s a typical Header component, first written using <174>StaticQuery</174>and then <175>useStaticQuery</175>.</173><176>💡 For a great introduction to using the command line, check out<177>Codecademy’s Command Line tutorial</177>for Mac and Linux users, and this tutorial for Windows users. Even if you are a Windows user, the first page of the Codecademy tutorial is a valuable read.</176></160></158></151></149>"
msgstr ""

#: src/pages/index.js:122
msgid "Curious yet?"
msgstr ""

#: src/pages/index.js:125
msgid "It only takes a few minutes to get up and running!"
msgstr ""

#: src/pages/index.js:137
msgid "Get Started"
msgstr ""

#: src/pages/plugins.js:120
msgid "Please use the search bar to find plugins that will make your blazing fast site even more awesome. If you 'd like to create your own plugin, see the<0>Plugin Authoring</0> page in the docs! To learn more about Gatsby plugins, visit the<1>plugins doc page</1>."
msgstr ""
